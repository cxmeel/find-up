"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[725],{74578:e=>{e.exports=JSON.parse('{"functions":[{"name":"FindUp","desc":"Returns the closest instance in the ancestry of `self` that satisfies the\\ngiven options.\\n\\n```lua\\nlocal folder = FindUp(script, \\"MyInstance\\", {\\n  className = \\"Folder\\",\\n})\\n```","params":[{"name":"self","desc":"The instance to start searching from","lua_type":"Instance"},{"name":"name","desc":"The name of the instance to find","lua_type":"string"},{"name":"options","desc":"The options to use when searching","lua_type":"FindUpAllOptions?"}],"returns":[{"desc":"The instance found, or nil if not found","lua_type":"Instance?"}],"function_type":"static","source":{"line":23,"path":"src/FindUp.lua"}},{"name":"FindUpAll","desc":"Returns all instances in the ancestry of `self` that satisfy the given\\noptions.\\n\\n```lua\\nlocal folders = FindUpAll(script, \\"MyInstance\\", {\\n  className = \\"Folder\\",\\n})\\n```","params":[{"name":"self","desc":"The instance to start searching from","lua_type":"Instance"},{"name":"name","desc":"The name of the instance to find","lua_type":"string"},{"name":"options","desc":"The options to use when searching","lua_type":"FindUpAllOptions?"}],"returns":[{"desc":"The instances found","lua_type":"{Instance}"}],"function_type":"static","source":{"line":56,"path":"src/FindUpAll.lua"}},{"name":"FindFirstSibling","desc":"Searches for the first sibling of `self` with the given name. This is a shortcut\\nfor using `FindUp` with `stopAt` set to `self.Parent`, and `includeStopAt` set to `true`.\\n\\n```lua\\nlocal sibling = FindFirstSibling(script, \\"ShopGuiFrame\\")\\n```","params":[{"name":"self","desc":"The instance to start searching from (i.e. the child whose sibling you want to find)","lua_type":"Instance"},{"name":"name","desc":"The name of the sibling to find","lua_type":"string"},{"name":"options","desc":"The options to use when searching","lua_type":"FindUpAllOptions?"}],"returns":[{"desc":"The sibling found","lua_type":"Instance?"}],"function_type":"static","source":{"line":23,"path":"src/FindFirstSibling.lua"}},{"name":"GetAncestors","desc":"Returns all instances in the ancestry of `self`.\\n\\n```lua\\nlocal ancestors = GetAncestors(script)\\n\\nlocal ancestors = GetAncestors(script, {\\n  stopAt = game.Workspace,\\n  includeSelf = true,\\n  includeStopAt = true,\\n})\\n```","params":[{"name":"self","desc":"The instance to start searching from","lua_type":"Instance"},{"name":"options","desc":"The options to use when searching","lua_type":"GetAncestorsOptions?"}],"returns":[{"desc":"The instances found","lua_type":"{Instance}"}],"function_type":"static","source":{"line":52,"path":"src/GetAncestors.lua"}},{"name":"WaitForSibling","desc":"","params":[{"name":"self","desc":"The instance to start searching from","lua_type":"Instance"},{"name":"name","desc":"The name of the sibling to wait for","lua_type":"string"},{"name":"options","desc":"The options to use when searching or the timeout","lua_type":"(WaitForSiblingOptions | number)?"}],"returns":[],"function_type":"static","source":{"line":83,"path":"src/WaitForSibling.lua"}}],"properties":[],"types":[{"name":"FindUpAllOptions","desc":"Extends [GetAncestorsOptions].\\n\\nDefault options:\\n\\n```lua\\n{\\n  ignoreCase = nil,\\n  className = nil,\\n  isA = nil,\\n  predicate = nil,\\n}\\n```","fields":[{"name":"ignoreCase","lua_type":"boolean?","desc":"Whether to ignore case when comparing names"},{"name":"className","lua_type":"string?","desc":"The class name of the instance to find"},{"name":"isA","lua_type":"string?","desc":"Performs an `:IsA` check on each child"},{"name":"predicate","lua_type":"function?","desc":"A function that should return true if the instance is a match"}],"source":{"line":29,"path":"src/FindUpAll.lua"}},{"name":"GetAncestorsOptions","desc":"Default options:\\n\\n```lua\\n{\\n  stopAt = nil,\\n  includeSelf = nil,\\n  includeStopAt = nil,\\n}\\n```","fields":[{"name":"stopAt","lua_type":"Instance?","desc":"The instance to stop at"},{"name":"includeSelf","lua_type":"boolean?","desc":"Whether to include `self` in the results"},{"name":"includeStopAt","lua_type":"boolean?","desc":"Whether to include `stopAt` in the results"}],"source":{"line":24,"path":"src/GetAncestors.lua"}},{"name":"WaitForSiblingOptions","desc":"Extends [FindUpAllOptions].\\n\\nDefault options:\\n\\n```lua\\n{\\n  ignoreCase = nil,\\n  className = nil,\\n  isA = nil,\\n  predicate = nil,\\n  timeout = nil,\\n}\\n```","fields":[{"name":"timeout","lua_type":"number?","desc":"The maximum time to wait for the instance to appear"}],"source":{"line":26,"path":"src/WaitForSibling.lua"}}],"name":"FindUp","desc":"","source":{"line":11,"path":"src/init.lua"}}')}}]);